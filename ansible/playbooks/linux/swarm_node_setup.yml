---
- hosts: all
  become: no
  tasks:
  - name: Create folder with node resources
    local_action: command ../../scripts/node_make_join_token.sh
    run_once: true

    ## https://docs.ansible.com/ansible/latest/modules/docker_image_module.html
#  - name: Copy docker worker image to tar archive
#    local_action: command docker image save -o ../../worker_staging/ute_worker.tar ute:worker
#    run_once: true

   
  - name: Archive docker worker image to tar archive
    docker_image:
      name: ute
      tag: worker
      archive_path: ute_worker.tar

  - name: Get info for next task to check if file exists
    local_action: stat path=../../worker_staging/ute_worker.tar.gz
    register: gzip_file

    ## uses the registered var "gzip_file" above to check its properties for existing
  - name: Compress docker image
    local_action: command gzip --best ../../worker_staging/ute_worker.tar
    when: not gzip_file.stat.exists
    run_once: true

  - name: Send worker package to swarm nodes
    synchronize:
      src: "../../worker_staging/"
      dest: "/home/{{ ansible_ssh_user }}/"

  - name: Uncompress docker image on remote nodes
    command: gunzip "/home/{{ ansible_ssh_user }}/ute_worker.tar.gz"

  - name: Install docker image ute:worker
    command: docker image load -i "/home/{{ ansible_ssh_user }}/ute_worker.tar"

  - name: Join node to swarm
    shell: "/home/{{ ansible_ssh_user }}/token_cmd.sh"
    args:
      executable: /bin/bash

  - name: Clean up remote host files
    file:
      path: "{{ item }}"
      state: absent
    with_items: 
      - /home/{{ ansible_ssh_user }}/token_cmd.sh
      - /home/{{ ansible_ssh_user }}/ute_worker.tar

  - name: Check if gzip exists
    local_action: stat path=../../worker_staging/ute_worker.tar.gz
    register: gzip_file2

    ## Only remove gzip file. Keep others as a cache
  - name: Clean up locally
    local_action: command rm ../../worker_staging/ute_worker.tar.gz
    when: gzip_file2.stat.exists
    run_once: true



    
