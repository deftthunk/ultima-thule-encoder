FROM debian:buster-slim

## add x265, its shared libraries, and paths
COPY ./resources/worker/ute_lib.conf /etc/ld.so.conf.d/ute_lib.conf
COPY ./resources/worker/sources.list /etc/apt/sources.list

## install packages, add user 'utbot', and update shared lib path
RUN apt-get update && \
  apt-get install -y  \
				build-essential \
				git \
				autoconf \
				automake \
				cmake \
				curl \
				linux-headers-amd64 \
				coreutils \
				mercurial \
				nasm \
				yasm \
				libtool \
				fftw-dev \
				libpng-dev \
				libxvidcore-dev \
				libbluray-dev \
				zlib1g-dev \
				libopencv-dev \
				libopencv-core-dev \
				ocl-icd-opencl-dev \
				opencl-headers \
        python3-pip \
        python3-setuptools \
        python3-wheel \
        python3-dev \
        apt-utils \
        locales-all \
        gosu \
				gcc \
				libtool \
				pkg-config \
				ocl-icd-libopencl1 \
				beignet-opencl-icd \
				nvidia-opencl-icd \
				pocl-opencl-icd \
				ocl-icd-libopencl1 \
				libboost-filesystem1.67 \
				libboost-filesystem1.67-dev \
				libboost-system1.67 \
				libboost-system1.67-dev \
				linux-headers-amd64 \
				libsndfile1-dev \
				ocl-icd-opencl-dev \
				libfftw3-dev \
				gawk \
				unzip \
        ffmpeg 

	RUN pip3 install cython && \
		sed -i 's/ash/bash/g' /etc/passwd && \
    echo "export PYTHONPATH=${PYTHONPATH}:/usr/local/lib/python2.7/site-packages" >> /etc/profile && \
    echo "export PYTHONPATH=${PYTHONPATH}:/usr/local/lib/python3/site-packages" >> /etc/profile && \
    echo "export PYTHONPATH=${PYTHONPATH}:/usr/local/lib/python3.7/site-packages" >> /etc/profile && \
    echo "export PYTHONPATH=${PYTHONPATH}:/usr/local/lib/vapoursynth" >> /etc/profile && \
    echo "export PYTHONPATH=${PYTHONPATH}:/usr/local/lib/python3" >> /etc/profile && \
    echo "export PYTHONPATH=${PYTHONPATH}:/home/utbot/.local/lib/python3.7/site-packages" >> /etc/profile && \
		echo "export PYTHONPATH=${PYTHONPATH}:/usr/local/lib/vapoursynth" >> /etc/profile

	RUN apt-get clean && \
	rm -rf /var/lib/apt/lists/* && \
  useradd -ms /bin/bash utbot && \
  mkdir -p /ute/x265 

	RUN git clone https://github.com/sekrit-twc/zimg.git && \
    cd zimg && \
    ./autogen.sh && bash -c ./configure && \
    make -j$(nproc) && \
		make install && \
		cd .. && \
		rm -rf zimg 

	RUN git clone https://github.com/vapoursynth/vapoursynth.git && \
    cd vapoursynth && \
    ./autogen.sh && bash -c ./configure && \
    make -j$(nproc) && \
		make install && \
    cd .. && rm -rf vapoursynth 

	RUN git clone https://github.com/darealshinji/vapoursynth-plugins.git && \
    cd vapoursynth-plugins && \
    ./autogen.sh && bash -c ./configure && \
    make -j$(nproc) && \
		make install && \
    cd .. && rm -rf vapoursynth-plugins


ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

VOLUME [ "/ute/x265" ]

RUN touch /etc/ld.so.conf.d/ute.conf && \
	echo "/usr/local/lib" >> /etc/ld.so.conf.d/ute.conf && \
	echo "/usr/local/lib/vapoursynth" >> /etc/ld.so.conf.d/ute.conf && \
	echo "/usr/local/lib/python3.7/site-packages" >> /etc/ld.so.conf.d/ute.conf


## become user 'utbot', change working dir, install RQ
USER utbot
WORKDIR /home/utbot
RUN pip3 install vapoursynth rq --user
ENV PATH="$PATH:/ute/x265:/home/utbot/.local/bin:/usr/local/sbin:/usr/local/bin"


## add main script loop, UTE python celery code, and
## set celery execution path
COPY ./resources/worker/run.sh /home/utbot/run.sh
COPY ./resources/worker/run_root.sh /run_root.sh
COPY ./src /home/utbot/utecode/
#ENV PATH="/home/utbot/.local/bin:${PATH}"
#ENV PATH="/ute/x265:${PATH}"

USER root

#ENTRYPOINT ["/bin/bash", "-l"]
CMD [ "/run_root.sh" ]
