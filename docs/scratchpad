##
## (Re)Setup
##
- clean out old containers
- prune ute volumes
- check/create folders 'config/keys', 'logs'
- load config
- check/build x265
- check/build rabbitmq
- check/build worker
- check/build tasker
- check for swarm overlay net
- start registry
- push worker image
- deploy swarm
- 

#################################
 swarm notes (linux only notes):
#################################

- swarm manager node needs to be a static IP (or domain name) for workers to connect to
- create new swarm:
  'docker swarm init --advertise-addr <manager-ip>'
  'docker info' for swarm status
  'docker node ls' for node info

##
## swarm status commands
##
- see service state details, using either the name or id of the service
  'docker service inspect --pretty helloswarm'
- see which nodes are running the service
  'docker service ps helloswarm'

##
## swarm grow/shrink running tasks
##
- scale service to more (or fewer) tasks. each instance of the service is called a 
  "task", and can run multiple tasks per node. run on manager node:
  'docker service scale <service-id>=<number-of-tasks>'
- example:
  'docker service scale helloswarm=2

##
## swarm remove
##
- bring down node for removal. must run on target node:
  'docker swarm leave'

- run on manager node (if node is already down):
  'docker swarm rm <swarm-name-or-id>



##
## user config stuff
##
- NFS network paths, shared directory name, and local path on worker nodes.
  affects docker-compose.yml, resources/worker/run.sh, ut_project/*
- clientCheckFreq
- frameBufferCount
- jobCount ???
- number of worker tasks
- worker resource specs
- celery worker timelimit (worker run.sh)
- the 'cpus' key in docker-stack.yml is a percentage of cputime on worker
  machine. to use more than one core, set it over 1.0 (ie. 2.50 will use 
  two and a half cores per celery '--concurrency=' task)

##
## creating a swarm node (w/o registry)
##
- ansible-playbook -i ./hosts.ini ansible/playbooks/linux/docker.yml
- ansible-playbook -i ./hosts.ini ansible/playbooks/linux/swarm_node_setup.yml


##
## ansible container
##
- must include sshpass


##
## creating a swarm node (w/ registry)
##




##
## future improvements
##
- private registry using openssl self-signed key
- logging

