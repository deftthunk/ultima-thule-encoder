- COMPLETED|make async function to determine average fps being encoded on swarm
- figure out windows madness
- dynamically add/remove workers to/from swarm
- logging
- config: enable per-file config for crop settings
- watchdog (dynamically change timeout, restart failed workers, finish failed tasks)
- detect when a worker goes down, and requeue their work. otherwise the job hanges indefinitely
- coastdown/shutdown
- python TUI
- add multi-threading to FindWork() to parallelize checks for ongoing file transfers
- simple folders for pre/post processing plugins. plugins can take the form of python or bash. provide a simple api or library?  plugins get run in the order of their name "01_plugin.sh"


BUGS:
- only one high task gets queued at a time
- if checkForWork() finds existing work, it assumes the missing chunks are all at the end of the file (if the user or a process deleted or failed to make a chunk somewhere else, it will be glossed over)
- if checkForWork() finds existing work, the generated array of work will be
	passed onto checkForErrors() in its truncated form, and UTE will only look at the first 'x' amount of chunks
- sort files so behaviour is consistent between runs
- if a worker is added while UTE is processing, it seems not all workers in teh swarm stay active?
- COMPLETED|: requeuing failed jobs sends them to back of queue
- COMPLETED|: starts encoding file while file still transfering to inbox
- sometimes requeue can be an infinite loops since same failed worker keeps getting same failed
task. try sleeping on worker or requeue for a few seconds to avoid?


